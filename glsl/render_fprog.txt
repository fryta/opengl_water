#version 330


const float H_SCALE = 1.0/64.0;

uniform sampler2D texDiff;
uniform sampler2D texNormal;
uniform sampler2D texHeight;

uniform float shininess = 32.0;

in vec3 posView;
in vec3 normalView;
in vec3 tgtUView;
in vec3 tgtVView;
in vec2 texcoord;

out vec4 rslt0;
out vec4 rslt1;
out vec4 rslt2;
out vec4 rslt3;


void main()
{
	vec3 TU = normalize(tgtUView);
	vec3 TV = normalize(tgtVView);
	vec3 N = normalize(normalView);
	mat3 texSpace = mat3(TU, TV, N);

	//vec2 dcoord = vec2(0.0);
	float h = (texture(texHeight, texcoord).x*2.0 - 1.0)*H_SCALE;
	vec3 V = -normalize(posView)*texSpace;
	vec2 dcoord = vec2(V.x, V.y)*h;

	//N = vec3(0.0, 0.0, 1.0);
	N = texture(texNormal, texcoord + dcoord).xyz*2.0 - 1.0;

	vec3 color = texture(texDiff, texcoord + dcoord).rgb;

	rslt0 = vec4(posView, 1.0);
	rslt1 = vec4(texSpace*N, 1.0);
	rslt2 = vec4(color, 1.0);
	rslt3 = vec4(color, shininess);
}
